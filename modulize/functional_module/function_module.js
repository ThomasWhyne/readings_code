//functional_module

function counter(){
    return 3;
}

function sum(){
    return counter()+counter()
}

//将独立函数作为模块使用，封装代码块。易污染全局命名空间，模块成员间关系模糊。

//-------------------------------------------------------------------------------------------------

// namespace_module

const myModule={
    foo(){
        return 3;
    },
    bar(){
        return 4;
    }
}

//能有效减少对全局空间的污染，但这种简单封装导致模块数据不安全

//---------------------------------------------------------------------------------------------------------


// IIFE_module:见iife.js + iife.html
//利用匿名函数闭包封装实现数据私有，传入全局对象，通过给全局对象挂载属性向外暴露接口
//添加模块依赖困难

//---------------------------------------------------------------------------------------------------------

// IIFE_ENHANCE

//现代模块基石，方便IIFE模块引入依赖
//可以再传入jQuery的第三方模块，但模块间引入顺序须严格保证

